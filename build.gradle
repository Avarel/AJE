import org.apache.tools.ant.filters.ReplaceTokens

/*
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id 'com.jfrog.bintray' version '1.7.2'
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.kotlin.jvm' version '1.1.3'
    id 'com.github.johnrengelman.shadow' version '2.0.0'
}

group = 'xyz.avarel'
version = new Version(major: 1, minor: 0, revision: 0)

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

if (!hasProperty('bintrayUsername')) bintrayUsername = ''
if (!hasProperty('bintrayApiKey')) bintrayApiKey = ''

dependencies {
    project.childProjects.values().each { compile it }
    //testCompile group: 'junit', name: 'junit', version: '4.12'
}

allprojects {
    apply plugin: 'java'
    if (hasProperty('requiresKotlin')) apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = 'xyz.avarel.kaiper'
    version = rootProject.version

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task clearPrepared(type: Delete) {
        delete 'build/prepared-src'
    }

    //Task for the versioning system
    task sourcesForRelease(type: Copy) {
        from 'src/main/java'
        into 'build/prepared-src'
        filter(ReplaceTokens, tokens: [
                version: project.version
        ])
    }
    sourcesForRelease.dependsOn clearPrepared

    compileJava {
        source = sourcesForRelease.destinationDir
        classpath = sourceSets.main.compileClasspath

        options.encoding = 'UTF-8'

        dependsOn sourcesForRelease
    }

    jar {
        baseName = project.name
        manifest {
            attributes 'Implementation-Version': project.version
        }
    }

    shadowJar {
        classifier = 'withDependencies'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourcesForRelease.destinationDir
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            BintrayRelease(MavenPublication) {
                from components.java
                groupId group
                artifactId project.name
                version project.version
                artifact javadocJar
                artifact sourcesJar
            }
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '3.5'
    }

    build {
        dependsOn jar, javadocJar, sourcesJar, shadowJar
    }

    artifacts {
        archives javadocJar, sourcesJar, shadowJar
    }

    test {
        dependsOn assemble
    }

    bintray {
        user = bintrayUsername
        key = bintrayApiKey
        publications = ['BintrayRelease']
        pkg {
            repo = 'maven'
            name = project.name
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/Avarel/Kaiper.git'
            publish = true
            version {
                name = project.version
                released = new Date()
            }
        }
    }

    bintrayUpload {
        dependsOn build

        onlyIf { !bintrayUsername.empty }
        onlyIf { !bintrayApiKey.empty }
    }
}